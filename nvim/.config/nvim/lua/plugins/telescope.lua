return {
	-- "nvim-telescope/telescope.nvim",
	-- tag = "0.1.8",
	-- dependencies = {
	-- 	"nvim-lua/plenary.nvim",
	-- 	{
	-- 		"nvim-telescope/telescope-fzf-native.nvim",
	-- 		build = "make",
	-- 		cond = function()
	-- 			return vim.fn.executable("make") == 1
	-- 		end,
	-- 	},
	-- 	{ "nvim-telescope/telescope-ui-select.nvim" },
	-- 	{ "nvim-tree/nvim-web-devicons", enabled = vim.g.have_nerd_font },
	-- },
	-- config = function()
	-- 	require("telescope").setup({
	-- 		-- You can put your default mappings / updates / etc. in here
	-- 		--  All the info you're looking for is in `:help telescope.setup()`
	-- 		defaults = {
	-- 			mappings = {
	-- 				i = {
	-- 					["<C-k>"] = require("telescope.actions").move_selection_previous, -- move to prev result
	-- 					["<C-j>"] = require("telescope.actions").move_selection_next, -- move to next result
	-- 					["<C-l>"] = require("telescope.actions").select_default, -- open file
	-- 					["<c-x>"] = require("telescope.actions").delete_buffer, -- close buffer
	-- 					["<c-h>"] = require("telescope.actions").select_horizontal, -- close buffer
	-- 				},
	-- 				n = {
	-- 					["<c-x>"] = require("telescope.actions").delete_buffer, -- close buffer
	-- 				},
	-- 			},
	-- 		},
	-- 		pickers = {
	-- 			find_files = {
	-- 				file_ignore_patterns = { "node_modules", ".git", ".venv" },
	-- 				hidden = true,
	-- 			},
	-- 		},
	-- 		live_grep = {
	-- 			file_ignore_patterns = { "node_modules", ".git", ".venv" },
	-- 			additional_args = function(_)
	-- 				return { "--hidden" }
	-- 			end,
	-- 		},
	-- 		extensions = {
	-- 			["ui-select"] = {
	-- 				require("telescope.themes").get_dropdown(),
	-- 			},
	-- 			fzf = {
	-- 				fuzzy = true, -- false will only do exact matching
	-- 				override_generic_sorter = true, -- override the generic sorter
	-- 				override_file_sorter = true, -- override the file sorter
	-- 				case_mode = "smart_case", -- or "ignore_case" or "respect_case"
	-- 				-- the default case_mode is "smart_case"
	-- 			},
	-- 		},
	-- 	})
	--
	-- 	-- Enable Telescope extensions if they are installed
	-- 	pcall(require("telescope").load_extension, "fzf")
	-- 	pcall(require("telescope").load_extension, "ui-select")
	--
	-- 	-- See `:help telescope.builtin`
	-- 	local builtin = require("telescope.builtin")
	-- 	vim.keymap.set("n", "<leader>sh", builtin.help_tags, { desc = "[S]earch [H]elp" })
	-- 	vim.keymap.set("n", "<leader>sk", builtin.keymaps, { desc = "[S]earch [K]eymaps" })
	-- 	vim.keymap.set("n", "<leader>sf", builtin.find_files, { desc = "[S]earch [F]iles" })
	-- 	vim.keymap.set("n", "<leader>ss", builtin.builtin, { desc = "[S]earch [S]elect Telescope" })
	-- 	vim.keymap.set("n", "<leader>sw", builtin.grep_string, { desc = "[S]earch current [W]ord" })
	-- 	vim.keymap.set("n", "<leader>sg", builtin.live_grep, { desc = "[S]earch by [G]rep" })
	-- 	vim.keymap.set("n", "<leader>sd", builtin.diagnostics, { desc = "[S]earch [D]iagnostics" })
	-- 	vim.keymap.set("n", "<leader>sb", builtin.buffers, { desc = "[S]earch [D]iagnostics" })
	-- 	vim.keymap.set("n", "<leader>sr", builtin.resume, { desc = "[S]earch [R]esume" })
	-- 	vim.keymap.set("n", "<leader>s.", builtin.oldfiles, { desc = '[S]earch Recent Files ("." for repeat)' })
	-- 	vim.keymap.set("n", "<leader><leader>", builtin.find_files, { desc = "[S]earch [F]iles" })
	-- end,
}
